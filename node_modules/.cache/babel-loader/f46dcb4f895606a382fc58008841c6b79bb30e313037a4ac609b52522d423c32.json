{"ast":null,"code":"var _jsxFileName = \"/Users/sandhyaneupane/Desktop/Hacktx25/Stockverse/src/context/DataContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext();\nexport const useData = () => {\n  _s();\n  const context = useContext(DataContext);\n  if (!context) {\n    throw new Error('useData must be used within a DataProvider');\n  }\n  return context;\n};\n_s(useData, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const DataProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState({\n    username: 'Trader123',\n    virtualBalance: 10000,\n    totalPortfolioValue: 12500\n  });\n  const [stocks, setStocks] = useState([{\n    symbol: 'AAPL',\n    name: 'Apple Inc.',\n    price: 175.50,\n    change: 2.30,\n    changePercent: 1.33\n  }, {\n    symbol: 'GOOGL',\n    name: 'Alphabet Inc.',\n    price: 142.80,\n    change: -1.20,\n    changePercent: -0.83\n  }, {\n    symbol: 'MSFT',\n    name: 'Microsoft Corporation',\n    price: 378.90,\n    change: 5.40,\n    changePercent: 1.45\n  }, {\n    symbol: 'TSLA',\n    name: 'Tesla Inc.',\n    price: 245.20,\n    change: -3.80,\n    changePercent: -1.53\n  }, {\n    symbol: 'AMZN',\n    name: 'Amazon.com Inc.',\n    price: 155.30,\n    change: 1.80,\n    changePercent: 1.17\n  }, {\n    symbol: 'META',\n    name: 'Meta Platforms Inc.',\n    price: 485.60,\n    change: 8.90,\n    changePercent: 1.87\n  }]);\n  const [portfolio, setPortfolio] = useState([{\n    symbol: 'AAPL',\n    shares: 10,\n    avgPrice: 170.00,\n    currentPrice: 175.50\n  }, {\n    symbol: 'MSFT',\n    shares: 5,\n    avgPrice: 375.00,\n    currentPrice: 378.90\n  }, {\n    symbol: 'TSLA',\n    shares: 3,\n    avgPrice: 250.00,\n    currentPrice: 245.20\n  }]);\n  const [transactionHistory, setTransactionHistory] = useState([{\n    id: 1,\n    type: 'BUY',\n    symbol: 'AAPL',\n    shares: 10,\n    price: 170.00,\n    timestamp: '2024-01-15T10:30:00Z'\n  }, {\n    id: 2,\n    type: 'BUY',\n    symbol: 'MSFT',\n    shares: 5,\n    price: 375.00,\n    timestamp: '2024-01-14T14:20:00Z'\n  }, {\n    id: 3,\n    type: 'BUY',\n    symbol: 'TSLA',\n    shares: 3,\n    price: 250.00,\n    timestamp: '2024-01-13T09:15:00Z'\n  }, {\n    id: 4,\n    type: 'SELL',\n    symbol: 'GOOGL',\n    shares: 2,\n    price: 145.00,\n    timestamp: '2024-01-12T16:45:00Z'\n  }]);\n  const buyStock = (symbol, shares, price) => {\n    const totalCost = shares * price;\n    if (totalCost > user.virtualBalance) {\n      return {\n        success: false,\n        message: 'Insufficient balance'\n      };\n    }\n\n    // Update balance\n    setUser(prev => ({\n      ...prev,\n      virtualBalance: prev.virtualBalance - totalCost\n    }));\n\n    // Update portfolio\n    const existingStock = portfolio.find(stock => stock.symbol === symbol);\n    if (existingStock) {\n      setPortfolio(prev => prev.map(stock => stock.symbol === symbol ? {\n        ...stock,\n        shares: stock.shares + shares,\n        avgPrice: (stock.avgPrice * stock.shares + price * shares) / (stock.shares + shares)\n      } : stock));\n    } else {\n      setPortfolio(prev => [...prev, {\n        symbol,\n        shares,\n        avgPrice: price,\n        currentPrice: price\n      }]);\n    }\n\n    // Add to transaction history\n    setTransactionHistory(prev => [...prev, {\n      id: Date.now(),\n      type: 'BUY',\n      symbol,\n      shares,\n      price,\n      timestamp: new Date().toISOString()\n    }]);\n    return {\n      success: true,\n      message: 'Stock purchased successfully'\n    };\n  };\n  const sellStock = (symbol, shares, price) => {\n    const existingStock = portfolio.find(stock => stock.symbol === symbol);\n    if (!existingStock || existingStock.shares < shares) {\n      return {\n        success: false,\n        message: 'Insufficient shares'\n      };\n    }\n    const totalValue = shares * price;\n\n    // Update balance\n    setUser(prev => ({\n      ...prev,\n      virtualBalance: prev.virtualBalance + totalValue\n    }));\n\n    // Update portfolio\n    if (existingStock.shares === shares) {\n      setPortfolio(prev => prev.filter(stock => stock.symbol !== symbol));\n    } else {\n      setPortfolio(prev => prev.map(stock => stock.symbol === symbol ? {\n        ...stock,\n        shares: stock.shares - shares\n      } : stock));\n    }\n\n    // Add to transaction history\n    setTransactionHistory(prev => [...prev, {\n      id: Date.now(),\n      type: 'SELL',\n      symbol,\n      shares,\n      price,\n      timestamp: new Date().toISOString()\n    }]);\n    return {\n      success: true,\n      message: 'Stock sold successfully'\n    };\n  };\n  const updatePortfolioValue = () => {\n    const totalValue = portfolio.reduce((sum, stock) => {\n      const currentStock = stocks.find(s => s.symbol === stock.symbol);\n      return sum + stock.shares * ((currentStock === null || currentStock === void 0 ? void 0 : currentStock.price) || stock.currentPrice);\n    }, 0);\n    setUser(prev => ({\n      ...prev,\n      totalPortfolioValue: totalValue + user.virtualBalance\n    }));\n  };\n  const value = {\n    user,\n    stocks,\n    portfolio,\n    transactionHistory,\n    buyStock,\n    sellStock,\n    updatePortfolioValue,\n    setUser\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n_s2(DataProvider, \"bTO1Tx2ayaBDru+fCQlT5el/Ipk=\");\n_c = DataProvider;\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","DataContext","useData","_s","context","Error","DataProvider","children","_s2","user","setUser","username","virtualBalance","totalPortfolioValue","stocks","setStocks","symbol","name","price","change","changePercent","portfolio","setPortfolio","shares","avgPrice","currentPrice","transactionHistory","setTransactionHistory","id","type","timestamp","buyStock","totalCost","success","message","prev","existingStock","find","stock","map","Date","now","toISOString","sellStock","totalValue","filter","updatePortfolioValue","reduce","sum","currentStock","s","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sandhyaneupane/Desktop/Hacktx25/Stockverse/src/context/DataContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nconst DataContext = createContext();\n\nexport const useData = () => {\n  const context = useContext(DataContext);\n  if (!context) {\n    throw new Error('useData must be used within a DataProvider');\n  }\n  return context;\n};\n\nexport const DataProvider = ({ children }) => {\n  const [user, setUser] = useState({\n    username: 'Trader123',\n    virtualBalance: 10000,\n    totalPortfolioValue: 12500,\n  });\n\n  const [stocks, setStocks] = useState([\n    { symbol: 'AAPL', name: 'Apple Inc.', price: 175.50, change: 2.30, changePercent: 1.33 },\n    { symbol: 'GOOGL', name: 'Alphabet Inc.', price: 142.80, change: -1.20, changePercent: -0.83 },\n    { symbol: 'MSFT', name: 'Microsoft Corporation', price: 378.90, change: 5.40, changePercent: 1.45 },\n    { symbol: 'TSLA', name: 'Tesla Inc.', price: 245.20, change: -3.80, changePercent: -1.53 },\n    { symbol: 'AMZN', name: 'Amazon.com Inc.', price: 155.30, change: 1.80, changePercent: 1.17 },\n    { symbol: 'META', name: 'Meta Platforms Inc.', price: 485.60, change: 8.90, changePercent: 1.87 },\n  ]);\n\n  const [portfolio, setPortfolio] = useState([\n    { symbol: 'AAPL', shares: 10, avgPrice: 170.00, currentPrice: 175.50 },\n    { symbol: 'MSFT', shares: 5, avgPrice: 375.00, currentPrice: 378.90 },\n    { symbol: 'TSLA', shares: 3, avgPrice: 250.00, currentPrice: 245.20 },\n  ]);\n\n  const [transactionHistory, setTransactionHistory] = useState([\n    { id: 1, type: 'BUY', symbol: 'AAPL', shares: 10, price: 170.00, timestamp: '2024-01-15T10:30:00Z' },\n    { id: 2, type: 'BUY', symbol: 'MSFT', shares: 5, price: 375.00, timestamp: '2024-01-14T14:20:00Z' },\n    { id: 3, type: 'BUY', symbol: 'TSLA', shares: 3, price: 250.00, timestamp: '2024-01-13T09:15:00Z' },\n    { id: 4, type: 'SELL', symbol: 'GOOGL', shares: 2, price: 145.00, timestamp: '2024-01-12T16:45:00Z' },\n  ]);\n\n  const buyStock = (symbol, shares, price) => {\n    const totalCost = shares * price;\n    if (totalCost > user.virtualBalance) {\n      return { success: false, message: 'Insufficient balance' };\n    }\n\n    // Update balance\n    setUser(prev => ({\n      ...prev,\n      virtualBalance: prev.virtualBalance - totalCost\n    }));\n\n    // Update portfolio\n    const existingStock = portfolio.find(stock => stock.symbol === symbol);\n    if (existingStock) {\n      setPortfolio(prev => prev.map(stock => \n        stock.symbol === symbol \n          ? { \n              ...stock, \n              shares: stock.shares + shares,\n              avgPrice: ((stock.avgPrice * stock.shares) + (price * shares)) / (stock.shares + shares)\n            }\n          : stock\n      ));\n    } else {\n      setPortfolio(prev => [...prev, { symbol, shares, avgPrice: price, currentPrice: price }]);\n    }\n\n    // Add to transaction history\n    setTransactionHistory(prev => [...prev, {\n      id: Date.now(),\n      type: 'BUY',\n      symbol,\n      shares,\n      price,\n      timestamp: new Date().toISOString()\n    }]);\n\n    return { success: true, message: 'Stock purchased successfully' };\n  };\n\n  const sellStock = (symbol, shares, price) => {\n    const existingStock = portfolio.find(stock => stock.symbol === symbol);\n    if (!existingStock || existingStock.shares < shares) {\n      return { success: false, message: 'Insufficient shares' };\n    }\n\n    const totalValue = shares * price;\n\n    // Update balance\n    setUser(prev => ({\n      ...prev,\n      virtualBalance: prev.virtualBalance + totalValue\n    }));\n\n    // Update portfolio\n    if (existingStock.shares === shares) {\n      setPortfolio(prev => prev.filter(stock => stock.symbol !== symbol));\n    } else {\n      setPortfolio(prev => prev.map(stock => \n        stock.symbol === symbol \n          ? { ...stock, shares: stock.shares - shares }\n          : stock\n      ));\n    }\n\n    // Add to transaction history\n    setTransactionHistory(prev => [...prev, {\n      id: Date.now(),\n      type: 'SELL',\n      symbol,\n      shares,\n      price,\n      timestamp: new Date().toISOString()\n    }]);\n\n    return { success: true, message: 'Stock sold successfully' };\n  };\n\n  const updatePortfolioValue = () => {\n    const totalValue = portfolio.reduce((sum, stock) => {\n      const currentStock = stocks.find(s => s.symbol === stock.symbol);\n      return sum + (stock.shares * (currentStock?.price || stock.currentPrice));\n    }, 0);\n    \n    setUser(prev => ({\n      ...prev,\n      totalPortfolioValue: totalValue + user.virtualBalance\n    }));\n  };\n\n  const value = {\n    user,\n    stocks,\n    portfolio,\n    transactionHistory,\n    buyStock,\n    sellStock,\n    updatePortfolioValue,\n    setUser,\n  };\n\n  return (\n    <DataContext.Provider value={value}>\n      {children}\n    </DataContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGP,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC;IAC/Ba,QAAQ,EAAE,WAAW;IACrBC,cAAc,EAAE,KAAK;IACrBC,mBAAmB,EAAE;EACvB,CAAC,CAAC;EAEF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,CACnC;IAAEkB,MAAM,EAAE,MAAM;IAAEC,IAAI,EAAE,YAAY;IAAEC,KAAK,EAAE,MAAM;IAAEC,MAAM,EAAE,IAAI;IAAEC,aAAa,EAAE;EAAK,CAAC,EACxF;IAAEJ,MAAM,EAAE,OAAO;IAAEC,IAAI,EAAE,eAAe;IAAEC,KAAK,EAAE,MAAM;IAAEC,MAAM,EAAE,CAAC,IAAI;IAAEC,aAAa,EAAE,CAAC;EAAK,CAAC,EAC9F;IAAEJ,MAAM,EAAE,MAAM;IAAEC,IAAI,EAAE,uBAAuB;IAAEC,KAAK,EAAE,MAAM;IAAEC,MAAM,EAAE,IAAI;IAAEC,aAAa,EAAE;EAAK,CAAC,EACnG;IAAEJ,MAAM,EAAE,MAAM;IAAEC,IAAI,EAAE,YAAY;IAAEC,KAAK,EAAE,MAAM;IAAEC,MAAM,EAAE,CAAC,IAAI;IAAEC,aAAa,EAAE,CAAC;EAAK,CAAC,EAC1F;IAAEJ,MAAM,EAAE,MAAM;IAAEC,IAAI,EAAE,iBAAiB;IAAEC,KAAK,EAAE,MAAM;IAAEC,MAAM,EAAE,IAAI;IAAEC,aAAa,EAAE;EAAK,CAAC,EAC7F;IAAEJ,MAAM,EAAE,MAAM;IAAEC,IAAI,EAAE,qBAAqB;IAAEC,KAAK,EAAE,MAAM;IAAEC,MAAM,EAAE,IAAI;IAAEC,aAAa,EAAE;EAAK,CAAC,CAClG,CAAC;EAEF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,CACzC;IAAEkB,MAAM,EAAE,MAAM;IAAEO,MAAM,EAAE,EAAE;IAAEC,QAAQ,EAAE,MAAM;IAAEC,YAAY,EAAE;EAAO,CAAC,EACtE;IAAET,MAAM,EAAE,MAAM;IAAEO,MAAM,EAAE,CAAC;IAAEC,QAAQ,EAAE,MAAM;IAAEC,YAAY,EAAE;EAAO,CAAC,EACrE;IAAET,MAAM,EAAE,MAAM;IAAEO,MAAM,EAAE,CAAC;IAAEC,QAAQ,EAAE,MAAM;IAAEC,YAAY,EAAE;EAAO,CAAC,CACtE,CAAC;EAEF,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG7B,QAAQ,CAAC,CAC3D;IAAE8B,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,KAAK;IAAEb,MAAM,EAAE,MAAM;IAAEO,MAAM,EAAE,EAAE;IAAEL,KAAK,EAAE,MAAM;IAAEY,SAAS,EAAE;EAAuB,CAAC,EACpG;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,KAAK;IAAEb,MAAM,EAAE,MAAM;IAAEO,MAAM,EAAE,CAAC;IAAEL,KAAK,EAAE,MAAM;IAAEY,SAAS,EAAE;EAAuB,CAAC,EACnG;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,KAAK;IAAEb,MAAM,EAAE,MAAM;IAAEO,MAAM,EAAE,CAAC;IAAEL,KAAK,EAAE,MAAM;IAAEY,SAAS,EAAE;EAAuB,CAAC,EACnG;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,MAAM;IAAEb,MAAM,EAAE,OAAO;IAAEO,MAAM,EAAE,CAAC;IAAEL,KAAK,EAAE,MAAM;IAAEY,SAAS,EAAE;EAAuB,CAAC,CACtG,CAAC;EAEF,MAAMC,QAAQ,GAAGA,CAACf,MAAM,EAAEO,MAAM,EAAEL,KAAK,KAAK;IAC1C,MAAMc,SAAS,GAAGT,MAAM,GAAGL,KAAK;IAChC,IAAIc,SAAS,GAAGvB,IAAI,CAACG,cAAc,EAAE;MACnC,OAAO;QAAEqB,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAE;MAAuB,CAAC;IAC5D;;IAEA;IACAxB,OAAO,CAACyB,IAAI,KAAK;MACf,GAAGA,IAAI;MACPvB,cAAc,EAAEuB,IAAI,CAACvB,cAAc,GAAGoB;IACxC,CAAC,CAAC,CAAC;;IAEH;IACA,MAAMI,aAAa,GAAGf,SAAS,CAACgB,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACtB,MAAM,KAAKA,MAAM,CAAC;IACtE,IAAIoB,aAAa,EAAE;MACjBd,YAAY,CAACa,IAAI,IAAIA,IAAI,CAACI,GAAG,CAACD,KAAK,IACjCA,KAAK,CAACtB,MAAM,KAAKA,MAAM,GACnB;QACE,GAAGsB,KAAK;QACRf,MAAM,EAAEe,KAAK,CAACf,MAAM,GAAGA,MAAM;QAC7BC,QAAQ,EAAE,CAAEc,KAAK,CAACd,QAAQ,GAAGc,KAAK,CAACf,MAAM,GAAKL,KAAK,GAAGK,MAAO,KAAKe,KAAK,CAACf,MAAM,GAAGA,MAAM;MACzF,CAAC,GACDe,KACN,CAAC,CAAC;IACJ,CAAC,MAAM;MACLhB,YAAY,CAACa,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAAEnB,MAAM;QAAEO,MAAM;QAAEC,QAAQ,EAAEN,KAAK;QAAEO,YAAY,EAAEP;MAAM,CAAC,CAAC,CAAC;IAC3F;;IAEA;IACAS,qBAAqB,CAACQ,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MACtCP,EAAE,EAAEY,IAAI,CAACC,GAAG,CAAC,CAAC;MACdZ,IAAI,EAAE,KAAK;MACXb,MAAM;MACNO,MAAM;MACNL,KAAK;MACLY,SAAS,EAAE,IAAIU,IAAI,CAAC,CAAC,CAACE,WAAW,CAAC;IACpC,CAAC,CAAC,CAAC;IAEH,OAAO;MAAET,OAAO,EAAE,IAAI;MAAEC,OAAO,EAAE;IAA+B,CAAC;EACnE,CAAC;EAED,MAAMS,SAAS,GAAGA,CAAC3B,MAAM,EAAEO,MAAM,EAAEL,KAAK,KAAK;IAC3C,MAAMkB,aAAa,GAAGf,SAAS,CAACgB,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACtB,MAAM,KAAKA,MAAM,CAAC;IACtE,IAAI,CAACoB,aAAa,IAAIA,aAAa,CAACb,MAAM,GAAGA,MAAM,EAAE;MACnD,OAAO;QAAEU,OAAO,EAAE,KAAK;QAAEC,OAAO,EAAE;MAAsB,CAAC;IAC3D;IAEA,MAAMU,UAAU,GAAGrB,MAAM,GAAGL,KAAK;;IAEjC;IACAR,OAAO,CAACyB,IAAI,KAAK;MACf,GAAGA,IAAI;MACPvB,cAAc,EAAEuB,IAAI,CAACvB,cAAc,GAAGgC;IACxC,CAAC,CAAC,CAAC;;IAEH;IACA,IAAIR,aAAa,CAACb,MAAM,KAAKA,MAAM,EAAE;MACnCD,YAAY,CAACa,IAAI,IAAIA,IAAI,CAACU,MAAM,CAACP,KAAK,IAAIA,KAAK,CAACtB,MAAM,KAAKA,MAAM,CAAC,CAAC;IACrE,CAAC,MAAM;MACLM,YAAY,CAACa,IAAI,IAAIA,IAAI,CAACI,GAAG,CAACD,KAAK,IACjCA,KAAK,CAACtB,MAAM,KAAKA,MAAM,GACnB;QAAE,GAAGsB,KAAK;QAAEf,MAAM,EAAEe,KAAK,CAACf,MAAM,GAAGA;MAAO,CAAC,GAC3Ce,KACN,CAAC,CAAC;IACJ;;IAEA;IACAX,qBAAqB,CAACQ,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MACtCP,EAAE,EAAEY,IAAI,CAACC,GAAG,CAAC,CAAC;MACdZ,IAAI,EAAE,MAAM;MACZb,MAAM;MACNO,MAAM;MACNL,KAAK;MACLY,SAAS,EAAE,IAAIU,IAAI,CAAC,CAAC,CAACE,WAAW,CAAC;IACpC,CAAC,CAAC,CAAC;IAEH,OAAO;MAAET,OAAO,EAAE,IAAI;MAAEC,OAAO,EAAE;IAA0B,CAAC;EAC9D,CAAC;EAED,MAAMY,oBAAoB,GAAGA,CAAA,KAAM;IACjC,MAAMF,UAAU,GAAGvB,SAAS,CAAC0B,MAAM,CAAC,CAACC,GAAG,EAAEV,KAAK,KAAK;MAClD,MAAMW,YAAY,GAAGnC,MAAM,CAACuB,IAAI,CAACa,CAAC,IAAIA,CAAC,CAAClC,MAAM,KAAKsB,KAAK,CAACtB,MAAM,CAAC;MAChE,OAAOgC,GAAG,GAAIV,KAAK,CAACf,MAAM,IAAI,CAAA0B,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAE/B,KAAK,KAAIoB,KAAK,CAACb,YAAY,CAAE;IAC3E,CAAC,EAAE,CAAC,CAAC;IAELf,OAAO,CAACyB,IAAI,KAAK;MACf,GAAGA,IAAI;MACPtB,mBAAmB,EAAE+B,UAAU,GAAGnC,IAAI,CAACG;IACzC,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMuC,KAAK,GAAG;IACZ1C,IAAI;IACJK,MAAM;IACNO,SAAS;IACTK,kBAAkB;IAClBK,QAAQ;IACRY,SAAS;IACTG,oBAAoB;IACpBpC;EACF,CAAC;EAED,oBACEV,OAAA,CAACC,WAAW,CAACmD,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAA5C,QAAA,EAChCA;EAAQ;IAAA8C,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAChD,GAAA,CAxIWF,YAAY;AAAAmD,EAAA,GAAZnD,YAAY;AAAA,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}